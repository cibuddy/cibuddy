
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>delcom.lights</artifactId>
    <packaging>bundle</packaging>
    
    <name>${application.domain}.${project.artifactId}</name>
    <description>Hardware configuration and service exposure for the Delcom USB-light(s).</description>
    
    <parent>
        <groupId>com.cibuddy</groupId>
        <artifactId>lights</artifactId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    
    <properties>
        <!-- osgi directives used in the maven-bundle-plugin, defined in the root pom -->
        <bundle.symbolicNameDirective>singleton:=true</bundle.symbolicNameDirective>
        <bundle.symbolicName>${project.name};${bundle.symbolicNameDirective}</bundle.symbolicName>
        <bundle.namespace>${project.name}</bundle.namespace>
        <osgi.bundle.activator>${project.name}.impl.Activator</osgi.bundle.activator>
        <osgi.private.pkg>${project.name}*</osgi.private.pkg>
        <osgi.import.pkg>
            org.osgi.framework;version=[1.3.0','2.0.0),
            *
        </osgi.import.pkg>
        <osgi.export.pkg>
            ${project.name};version="1.0.0"
        </osgi.export.pkg>
    </properties>
  
    <dependencies>
        <!-- inter project dependencies -->
        <dependency>
            <groupId>${application.domain}</groupId>
            <artifactId>hid</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${application.domain}</groupId>
            <artifactId>core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- 3rd party dependencies -->
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.compendium</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- test dependencies (scope defined in parent pom) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>com.googlecode.pojosr</groupId>
            <artifactId>de.kalpatec.pojosr.framework</artifactId>
        </dependency>
    </dependencies>
    
    <build>
        <!-- plugins used -->
        <plugins>
            <!-- compile code against java 1.6 -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- attach obsolete artifacts for sonatypes oss (also for 'package' phase) -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <!-- enable it being an osgi bundle -->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <!-- 
                We need access to the native lib in order to run the test.
                Unfortunately, the access has to be absolute
              -->
              <!--configuration>
                    os.name doesn't work, so make it specific for the os
                  <argLine>-Djava.library.path=/Users/titan/cibuddy/drivers/hid/src/main/resources/lib/${os.name}/${os.arch}/</argLine>
              </configuration-->
            </plugin>
        </plugins>
    </build>
</project>
